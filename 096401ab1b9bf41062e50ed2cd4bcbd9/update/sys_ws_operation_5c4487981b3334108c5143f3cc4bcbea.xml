<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>OneDrive</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
    var terminationMessage = 'Termination Flow Not Run';
    var oneDriveMessage = 'OneDrive Flow Not Run';
    var incoming = request.body.data;
    var terminationFlowData = {
        manager_upn : incoming["manager_upn"],
        user_upn : incoming["user_upn"],
        delegation_status : incoming["delegation_status"]
    };
    var oneDriveFlowData = {
        access_url : incoming['access_url'],
        delegation_status : incoming["delegation_status"],
        manager_upn : incoming["manager_upn"],
        user_upn : incoming["user_upn"]
    };
    var terminationNotRunReasons = [];
    var oneDriveNotRunReasons = [];
    if (gs.nil(terminationFlowData.manager_upn)) terminationNotRunReasons.push('Blank Manager UPN');
    if (gs.nil(terminationFlowData.user_upn)) terminationNotRunReasons.push('Blank User UPN');
    if (gs.nil(oneDriveFlowData.access_url)) oneDriveNotRunReasons.push('Blank URL');
    if (gs.nil(oneDriveFlowData.delegation_status)) oneDriveNotRunReasons.push('Blank Delegation Status');
    if (gs.nil(oneDriveFlowData.manager_upn)) oneDriveNotRunReasons.push('Blank Manager UPN');
    if (gs.nil(oneDriveFlowData.user_upn)) oneDriveNotRunReasons.push('Blank User UPN');

    if(terminationNotRunReasons.length == 0)
    {
        try {
            terminationMessage = 'Termination Data Accepted';
            var inputs = {};
            inputs['flowdata'] = terminationFlowData; // Object 

            var result = sn_fd.FlowAPI.getRunner().subflow('x_apig_termination.azure__termination_return_data').inForeground().withInputs(inputs).run();
            var outputs = result.getOutputs();    
        } catch (e) {
            createIncident(e);
        }
    }
    else{
        terminationMessage = 'Termination Flow Not Run. Reason';
        terminationMessage += terminationNotRunReasons.length > 1 ? 's: ' : ': ';
        terminationMessage += terminationNotRunReasons.join(',');
    }

    if(oneDriveNotRunReasons.length == 0)
    {
        try {
            oneDriveMessage = 'OneDrive Data Accepted';
            var inputs = {};
            inputs['flowdata'] = oneDriveFlowData; // Object 

            var result = sn_fd.FlowAPI.getRunner().subflow('x_apig_termination.onedrive_delegation_return_data').inBackground().withInputs(inputs).run();
            var contextId = result.getContextId();
            var ritmGr = new GlideRecord('sc_req_item');
            if(ritmGr.get(oneDriveFlowData.ritm)){
                ritmGr.variables.onedrive_flow_sysid = contextId.toString();
                ritmGr.update();
            }
        } catch (e) {
            createIncident(e);
        }
    }
    else{
        oneDriveMessage = 'OneDrive Flow Not Run. Reason';
        oneDriveMessage += oneDriveNotRunReasons.length > 1 ? 's: ' : ': ';
        oneDriveMessage += oneDriveNotRunReasons.join(',');
    }

    //Sending Response
    var body = {};
    body.status = "OK";
    body.terminationMsg = terminationMessage;
    body.oneDriveMsg = oneDriveMessage;
    response.setBody(body);

    function createIncident(e) {
        var incidentGr = new GlideRecord('incident');
        incidentGr.initialize();
        incidentGr.short_description = 'Azure to APi Connect API Failure(Exception)';
        incidentGr.description = e;
        incidentGr.assigned_to = '';
        incidentGr.assignment_group = '48b385421be35090e7004229bc4bcb14';
        incidentGr.category = 'Fault/Failure';
        incidentGr.subcategory = 'Hardware';
        incidentGr.u_service = 'APi Connect (ServiceNow)';
        incidentGr.insert();
    }
})(request, response);]]></operation_script>
        <operation_uri>/api/x_apig_termination/termination/onedrive</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/onedrive</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>Terry.Lillo</sys_created_by>
        <sys_created_on>2021-11-09 18:23:18</sys_created_on>
        <sys_id>5c4487981b3334108c5143f3cc4bcbea</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>OneDrive</sys_name>
        <sys_package display_value="Termination Process Automation" source="x_apig_termination">096401ab1b9bf41062e50ed2cd4bcbd9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Termination Process Automation">096401ab1b9bf41062e50ed2cd4bcbd9</sys_scope>
        <sys_update_name>sys_ws_operation_5c4487981b3334108c5143f3cc4bcbea</sys_update_name>
        <sys_updated_by>Terry.Lillo</sys_updated_by>
        <sys_updated_on>2023-11-08 18:18:24</sys_updated_on>
        <web_service_definition display_value="Termination">6c0bba1c1bfff0108c5143f3cc4bcbdd</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
